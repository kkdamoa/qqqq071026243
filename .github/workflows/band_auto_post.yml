name: Band Auto Posting

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  post:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Git setup
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git config --global --add safe.directory '*'
        git checkout -b main || git checkout main
        
    - name: Setup Chrome and profile
      run: |
        mkdir -p chrome_profile
        chmod -R 777 chrome_profile
        if [ -f "band_cookies.json" ]; then
          echo "Found saved cookies"
        else
          echo "No saved cookies found"
        fi

    - name: Download profile and cookies
      uses: actions/download-artifact@v4
      with:
        name: chrome-data
        path: ./chrome_data
      continue-on-error: true

    - name: Setup Chrome environment
      run: |
        mkdir -p chrome_profile
        if [ -d "./chrome_data/chrome_profile" ]; then
          cp -r ./chrome_data/chrome_profile/* chrome_profile/
          echo "Chrome profile restored"
        fi
        if [ -f "./chrome_data/band_cookies.json" ]; then
          cp ./chrome_data/band_cookies.json .
          echo "Cookies restored"
        fi
        chmod -R 777 chrome_profile

    - name: Check authentication data
      run: |
        if [ ! -f "band_cookies.json" ] || [ ! -d "chrome_profile" ]; then
          echo "WARNING: Authentication data not found. Using email/password login"
        else
          echo "Using saved authentication data"
        fi
        
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install Chrome
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt-get update
        sudo apt-get install google-chrome-stable xvfb
        
    - name: Install dependencies
      run: |
        pip install selenium requests beautifulsoup4 webdriver_manager PyGithub

    - name: Update submodules
      run: |
        git submodule update --init --recursive
        git submodule foreach git pull origin main

    - name: Create config file
      env:
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
        POST_URL: ${{ secrets.URL }}
        TITLE: ${{ secrets.TITLE }}
        POST_TIME: ${{ secrets.TIME }}
        INTERVAL: ${{ secrets.INTERVAL }}
      run: |
        cat > config.json << EOL
        {
          "email": "$EMAIL",
          "password": "$PASSWORD",
          "post_url": "$POST_URL",
          "title": "$TITLE",
          "post_time": "$POST_TIME",
          "interval_hours": $INTERVAL,
          "bands": []
        }
        EOL
        cat config.json

    - name: Download saved cookies
      uses: actions/download-artifact@v4
      with:
        name: band-cookies
        path: .
      continue-on-error: true

    - name: Check cookie file
      run: |
        if [ ! -f "band_cookies.json" ]; then
          echo "::error::쿠키 파일이 없습니다. 먼저 로컬에서 band_auto_poster.py를 실행하여 쿠키를 생성해주세요."
          exit 1
        fi

    - name: Load band URLs
      run: |
        if [ -f "band_urls.json" ]; then
          echo "Found saved band URLs"
          cat band_urls.json
        else
          echo "No saved band URLs found"
        fi

    - name: Setup authentication data
      run: |
        # Chrome 프로필 및 쿠키 설정
        mkdir -p chrome_profile
        if [ -f "band_cookies.json" ]; then
          echo "Found cookies file"
        fi
        if [ -d "chrome_profile" ]; then
          echo "Found Chrome profile"
          chmod -R 777 chrome_profile
        fi
        
        # band_urls.json 확인
        if [ -f "band_urls.json" ]; then
          echo "Found band URLs:"
          cat band_urls.json
        else
          echo "No band URLs found"
        fi
        
    - name: Run band poster with auth data
      run: |
        xvfb-run --server-args="-screen 0 1920x1080x24" \
          --auto-servernum \
          python run_band_poster.py

    - name: Save updated auth data
      if: success()
      run: |
        if [ -f "band_cookies.json" ]; then
          cp band_cookies.json band_cookies.json.new
        fi
        if [ -d "chrome_profile" ]; then
          cp -r chrome_profile chrome_profile.new
        fi

    - name: Upload auth data
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: auth-data
        path: |
          band_cookies.json.new
          chrome_profile.new/
        retention-days: 7
        
    - name: Save profile and cookies
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: chrome-data
        path: |
          chrome_profile/
          band_cookies.json
        retention-days: 7
        
    - name: Save cookies
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: band-cookies
        path: band_cookies.json
        retention-days: 30
        
    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd $GITHUB_WORKSPACE
        git add -A
        git status
        if ! git diff --quiet HEAD; then
          git commit -m "Update chrome profile [skip ci]"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:main -f
        else
          echo "No changes to commit"
        fi
